Редактирование заметки реализовано как в стандартных приложения iOS (например, контакты). При открытии существующей заметки после внесения изменений становится доступна кнопка Done, после нажатия на которую происходит сохранение заметки и возврат на экран со списком заметок. При нажатии на кнопку Cancel или выход с экрана другим способом изменения в заметке не сохраняются. При создании новой заметки необходимо как минимум ввести заголовок и содержимое, после чего кнопкой Done можно сохранить заметку и она добавится в список. При нажатии на кнопку Cancel или выход с экрана другим способом новая заметка не добавляется.

Аналогичное поведение реализовано для экрана выбора цвета: выбранный цвет сохраняется после нажатия на кнопку Done.

Сохранение заметок в файл происходит в функции applicationDidEnterBackground(_ application: UIApplication) в AppDelegate, загрузка из файла - в application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool.  Фото заметки также сохраняются.

При первом запуске приложения (в случае отсутствия файла с заметками) добавляются предустановленные обычные и фото заметки. Изображения для предустановленных фото заметок находятся в папке DefaulImageNotes.

На экране с просмотром фото присуствует UIScrollView, в который программно добавляется максимум 3 UIImageView (текущая картинка, буфер справа, буфер слева), затем когда пользователь пролистывает влево/вправо, UIImageView переиспользуются с новыми изображениями. Таким образом эффективно используются ресурсы, если картинок будет очень много.

Все экраны приложения размещены в Main.storyboard.

Все ViewController и ViewCell для вкладки заметок лежат в /Modules/Notes.
Все ViewController и ViewCell для вкладки галереи лежат в /Modules/Gallery.

Кастомные UI компоненты расположены в /Components.

Элемент выбора цвета в виде квадратиков реализован с помощью отдельного компонента ColorSelectorView.swift, который внутри себя использует компонент ColorItemView.swift (отдельный квадрат с цветом, в котором также происходит рисование флажка). (/Components/ColorSelector)

Элемент выбора цвета из палитры реализован с помощью отдельного компонента ColorPickerView.swift и для него также требуются файлы ColorFieldView.swift (непосредственно сама палитра) и SelectedColorView.swift (элемент, отображающий текущий цвет). (/Components/ColorPicker)

Для элементов также требуется файл CGFloatExtension.swift в папке /Components/Shared. В нем содержится функция для преобразования градусов в радианы.